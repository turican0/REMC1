&buffer[4]			&adress[4]
pdwScreenBuffer_12EFF4+4
__int16 sub_30730(__int16 a1)//201730_

sky
-------------
v18 ff01 versus ebx b082

BYTE2(v27) ff versus esp+508 B0 2F08D4
BYTE2(v21) ff versus esp+50C 80

dword_B5D08 01 versus 273d08 a0
---------------------
char sub_2A700(int a1, __int16 a2, __int16 a3, __int16 a4, int a5, int a6, __int16 a7, int a8)//1FB700_
----------------------


&buffer[0x17e] 0xac
&adress[0x17e] 0x72
pdwScreenBuffer_12EFF4+0x17e

diference in sub_23940 under sub_23940

void sub_22E50(Type_AE400_29795* a1x)//1F3E50_
--------------------------------
&buffer[0xa2b] 0xd1
&adress[0xa2b] 0x16
pdwScreenBuffer_12EFF4+0xa2b

21a055 49055 sub_48710

goto LABEL_97;
v43 = (char *)(v42 * dword_12EFF0 + v41 + v65);
if ( v29 <= 1u )
{
*v43 = v74;

-------------------
void sub_5A3C0_5A8D0(int fontIndex) / 22B3C0

26C3B8 -> 9F6A0 63220 - find it
233C6B(62C6B) sub_62B60
20FEE1(3EEE1) sub_3EEA0
234597(63597) sub_634E0
211478(40478) sub_40440

sub_51480_517C0

26C3AC -> 0     0

6 - 1
4 - 2
7 - 1

a2x->bTab->Tab_0

pathStrArray_F1EF0

begFont0Tab_AE3B8_AE3A8_26C3B8_26C3A8


sFont0Tab_12CB28_2EAB28_2EAB18
sFont1Tab_12CB34_2EAB34_2EAB24

sFont0Tab_12CB28_2EAB28_2EAB18
sFont0Tab_12CB28_2EAB28_2EAB18

pathStrArray_21AB80_21AEC0[7]

colorPalette_var28
----------------
&buffer[0x3815] 0x5a
&adress[0x3815] 0x66
((uint8*)str_AE400_AE3F0)+0x3815

&buffer[0xa2b] 0x5a
&adress[0xa2b] 0x66
((uint8*)pdwScreenBuffer_12EFF4)+0xa2b

TypeStrFont* dword_AE3B8_2[2] = { &sFont0Tab_12CB28_2EAB28_2EAB18, &sFont1Tab_12CB34_2EAB34_2EAB24 };

char sub_48710(int a1, int a2, __int16 a3, __int16 a4, int a5, int a6, __int16 a7, int a8)//219710_

byte_AE077 26c067
205bf3 34BF3 int sub_34B40()

byte_AD167_AD157

byte_AD167_AD157[3856]

&buffer[0xa657] 0x49
&adress[0xa657] 0xb4
pdwScreenBuffer_12EFF4+0xa657

1fdefa 2CEFA sub_2C410
sub_2DCB0_2DCF0 1FECB0
sub_2FC50_sub_2FC90 200C50
sub_2F170_2F1B0 200170 *

sub_2A700

sub_30D90
sub_2A700
sub_2FC50_sub_2FC90/sub_2DCB0_2DCF0 
sub_2C410

dword_9074C

unk_902B4 24E2B4->d ds:24e2b4

begTmapsTab_12D744_2EB744_2EB734 2EB744
234585 63585 sub_634E0
211473 40473 sub_40440
205B05 34B05 sub_34B00()

unk_93AE0
244258 251AE0
243d89 72D89

sub_2C410

&buffer[0xacc6] 0x49
&adress[0xacc6] 0xb4
pdwScreenBuffer_12EFF4+0xa657

&buffer[0xd419] 0x49
&adress[0xd419] 0xb4
pdwScreenBuffer_12EFF4+0xd419


0x1FBB02

begBscreen_AE3FC_AE3EC_26C3FC_26C3EC + 35200+44*0xf+16

after add_compare(0x1FBB90, true, true);
*(_DWORD *)(v29 + 16) = dword_B5D14 * *(_DWORD *)v29 / v37;
-back this after next fix
-------------------------------
v231 4d1e versus 4d1d

341d

*(_DWORD *)(v29 + 8)

&buffer[0x45] 0xb5
&adress[0x45] 0x36
pdwScreenBuffer_12EFF4+0x45

v376[11] = strPal.byte_B7934_B7924[v366];
BYTE1(v366) += BYTE2(v1121) + v171;


sub_729A3

7716c
 
d ds 7c13 versus 7eecffff

v208 45000000 45000100
v203 3f000000 3f000100
v213 3a000000 3a000100

v62 + 24

&(int)begBscreen_AE3FC_AE3EC_26C3FC_26C3EC+0x00007d78
(int)begBscreen_AE3FC_AE3EC_26C3FC_26C3EC+0x00007d78+24

v52 = ((dword_B5CE8 * *(_DWORD *)(v51 + 16) - dword_B5CD4 * *(_DWORD *)(v51 + 28)) >> 16) + dword_B5D08;

---------------------
&buffer[0x45] 0xb5
&adress[0x45] 0x36
pdwScreenBuffer_12EFF4+0x45
0x2f0958

1fbff3 2AFF3

sub_729A3((uint32*)&v213, (uint32*)&v198, (uint32*)&v208);
sub_729A3((uint32*)&v198, (uint32*)&v203, (uint32*)&v208);
sub_729A3((uint32*)&v213, (uint32*)&v203, (uint32*)&v208);
sub_729A3((uint32*)&v213, (uint32*)&v198, (uint32*)&v203);

v198 v203 v208 v213

---------------------
&buffer[0xaf] 0xb5
&adress[0xaf] 0x6d
pdwScreenBuffer_12EFF4+0xaf

begBscreen_AE3FC_AE3EC_26C3FC_26C3EC + 0x00008cc4 + 20

*(int32*)(v51 + 20)
begBscreen_AE3FC_AE3EC_26C3FC_26C3EC+0x00008cd8

---------------------
&buffer[0xcb4a] 0xb4
&adress[0xcb4a] 0xab
pdwScreenBuffer_12EFF4+0xcb4a
0x2ECFF4 065be0 + 0xcb4a

&buffer[0xd562] 0x36
&adress[0xd562] 0xb4
pdwScreenBuffer_12EFF4+0xd562
0x2ECFF4 065be0 + 0xd562

                    sub_729A3((uint32*)&v213x[0], (uint32*)&v208x[0], (uint32*)&v198x[0]);
                    sub_729A3((uint32*)&v198x[0], (uint32*)&v208x[0], (uint32*)&v203x[0]);
                  }
                  else
                  {

v198x v203x v208x v213x

2462bc 752BC

LABEL_496:
                  v171 = __CFADD__((_WORD)v1099, (_WORD)v372);
                  LOWORD(v372) = v1099 + v372;
                  LOBYTE(v366) = *(_BYTE *)(v367 + v377);
                  LOBYTE(v367) = BYTE2(v1099) + v171 + v367;
                  v171 = __CFADD__(v1150, v372);
                  v372 += v1150;
                  BYTE1(v367) += BYTE2(v1110) + v171;
                  v171 = __CFADD__(v1166, v373);
                  v373 += v1166;
                  v376[11] = byte_B7934[v366];
                  BYTE1(v366) += BYTE2(v1121) + v171;


v376 = (_BYTE *)(dword_74F95[v373 & 0xF] + v370);
v373
v370

v373 = __ROL4__(*((_DWORD *)v368 + 4) + v1121 * v371, 16);
LOBYTE(v366) = *(_BYTE *)(v367 + v377);

&buffer[0xefd1] 0x34
&adress[0xefd1] 0x35
pdwScreenBuffer_12EFF4+0xefd1
0x2ECFF4 065be0 + 0xefd1

LOBYTE(v391) = *(_BYTE *)(v392 + v399);

v121 + 39 08 versus 18
&begBscreen_AE3FC_AE3EC_26C3FC_26C3EC[0x000079dc]+39

sem byse to nemelo dostat(33812)
if ( byte_90168[*(unsigned __int8 *)(v29 + 41)] )
          *(_BYTE *)(v29 + 39) |= 0x10u;

v242 == 0xb

v231 - compare

if (compare_index_1FBBA0 == 0x2c5)

v43 = dword_B5D14 * *(_DWORD *)(v29 + 8);?

byte_90168[256]
byte_9020C[v45] 256

-------------------
&buffer[0xb2e6] 0xb4
&adress[0xb2e6] 0x4e
pdwScreenBuffer_12EFF4+0xb2e6
0x2ECFF4 065be0 + 0xb2e6

if (compare_index_245FFB == 0x1d3) - fail
v368 0000eeffaaaaf6ff versus 00260094242700 

if (compare_index_245FFB == 0x100) - ok
if (compare_index_245FFB == 0x160) - ok
if (compare_index_245FFB == 0x190) - ok
if (compare_index_245FFB == 0x1A0) - ok
if (compare_index_245FFB == 0x1A8) - ok
if (compare_index_245FFB == 0x1AB) - ok
if (compare_index_245FFB == 0x1AD) - ok
if (compare_index_245FFB == 0x1AE) - ok
if (compare_index_245FFB == 0x1AF) - ok
if (compare_index_245FFB == 0x1B0) - ok
if (compare_index_245FFB == 0x1C1) - ok
if (compare_index_245FFB == 0x1CA) - ok
if (compare_index_245FFB == 0x1CE) - ok
if (compare_index_245FFB == 0x1CF) - ok
if (compare_index_245FFB == 0x1D1) - e4ff versus 2a

  if (compare_index_729A7 == 0x0)
  if (compare_index_729A7 == 0xc) - ok
  if (compare_index_729A7 == 0xd) - ok
  if (compare_index_729A7 == 0xe) - fail inputs
  if (compare_index_729A7 == 0x20) - fail inputs
  if (compare_index_729A7 == 0x5b1) - fail inputs
  if (compare_index_729A7 == 0x5b3) - fail inputs
  if (compare_index_729A7 == 0x5b5) - fail inputs
  if (compare_index_729A3 == 0x5b6) - fail inputs

if (compare_index_245FFB == 0x1D1) / 0x245FFB

00F

LABEL_500:(85108)
                  v171 = __CFADD__((_WORD)v1099, (_WORD)v372);
versus 0x24632F

v376[15] = strPal.byte_B7934_B7924[v366](ok);

70EB7
70EC6

-------------------
&buffer[0xb545] 0x35
&adress[0xb545] 0x4c
pdwScreenBuffer_12EFF4+0xb545
0x2ECFF4 065be0 + 0xb545

  if (compare_index_729A7 == 0x5e3)

LABEL_490:
                  v171 = __CFADD__((_WORD)v1099, (_WORD)v372);
                  LOWORD(v372) = v1099 + v372;
                  LOBYTE(v366) = *(_BYTE *)(v367 + v377);
                  LOBYTE(v367) = BYTE2(v1099) + v171 + v367;
                  v171 = __CFADD__(v1150, v372);
                  v372 += v1150;
                  BYTE1(v367) += BYTE2(v1110) + v171;
                  v171 = __CFADD__(v1166, v373);
                  v373 += v1166;
                  v376[5] = strPal.byte_B7934_B7924[v366];
                  BYTE1(v366) += BYTE2(v1121) + v171;

versus 0x2461C2

-------------------
&buffer[0xb545] 0x35
&adress[0xb545] 0x4c
pdwScreenBuffer_12EFF4+0xb545
0x2ECFF4 065be0 + 0xb545
-------------------
&buffer[0xb042] 0xb4
&adress[0xb042] 0x4b
pdwScreenBuffer_12EFF4+0xb042
0x2ECFF4 065be0 + 0xb042

&buffer[0xd200] 0x48
&adress[0xd200] 0xb4
pdwScreenBuffer_12EFF4+0xd200
0x2ECFF4 065be0 + 0xd200
-------------------
&buffer[0xe381] 0x4a
&adress[0xe381] 0xb4
pdwScreenBuffer_12EFF4+0xe381
0x2ECFF4 065be0 + 0xe381
-------------------
&buffer[0xec40] 0x49
&adress[0xec40] 0xb4
pdwScreenBuffer_12EFF4+0xec40
0x2ECFF4 065be0 + 0xec40

-------------------
buffer[0x7413] 0
adress[0x7413] 0x66
((uint8*)str_AE400_AE3F0)+0x7413

buffer[0x4] 0
adress[0x4] 0x66
((uint8*)str_AE400_AE3F0)+0x4
0x1F690+4

-------------------
buffer[0x7413] 0
adress[0x7413] 0x66
((uint8*)str_AE400_AE3F0)+0x7413

-------------------
buffer[0x4] 0xdf
adress[0x4] 0x96
((uint8*)str_AE400_AE3F0)+0x4
0x1F690+4

DrawGameFrame_20FB0

((int)tempBegBscreen)+0x26
((int)begBscreen_AE3FC_AE3EC_26C3FC_26C3EC)+0x26
0x48
0x08

pdwScreenBuffer_12EFF4+0x3
0xb4 versus 0xb5

sub_30730 versus DrawSky_30730_30770 - revize

v13  a v19 prvni 4 byte
*(_BYTE *)(v18 + v16);

errors
00 00
00 00
01 00
01 00

------------
pdwScreenBuffer_12EFF4+0xa3
0x0b versus 0x35

0xb101
versus
0xb001

b0ff
0-0 0-0
b0ff
1-0

------------
pdwScreenBuffer_12EFF4+0x140
0xb4 versus 0x36
------------
pdwScreenBuffer_12EFF4+0x140
0xb4 versus 0xb5
------------
pdwScreenBuffer_12EFF4+0xa657
0x49 versus 0xb4
------------
pdwScreenBuffer_12EFF4+0xd562
0xb4 versus 0x36

problem here:
if ((((tempBegBscreen[index109 - textRows].var_38.word | tempBegBscreen[index109].var_38.word | tempBegBscreen[index109 + 1].var_38.word | tempBegBscreen[index109].var_38.word)) & 2) == 0 &&
									((tempBegBscreen[index109 - textRows].var_38.word & tempBegBscreen[index109].var_38.word & tempBegBscreen[index109 + 1].var_38.word & tempBegBscreen[index109].var_38.word) & 0x78) == 0)

index109 - 312
v121 - 338

compare v89
0x332

------------
pdwScreenBuffer_12EFF4+0xa657
0xb4 versus 0x49

if (pnt1->var_1 == pnt2->var_1)
if (pnt1->var_1 == pnt3->var_1)
if (pnt1->var_1 >= pnt3->var_1)
if (pnt1->var_0 <= pnt2->var_0)
if (pnt2->var_0 <= pnt1->var_0)
if (pnt1->var_1 <= pnt2->var_1)
if (pnt1->var_1 != pnt3->var_1)
if (pnt1->var_1 >= pnt3->var_1)
if (pnt2->var_1 != pnt3->var_1)
if (pnt2->var_1 <= pnt3->var_1)
if (pnt2->var_0 <= pnt3->var_0)
if (pnt1->var_1 <= pnt2->var_1)
if (pnt1->var_1 != pnt3->var_1)
if (pnt1->var_1 >= pnt3->var_1)
if (pnt2->var_1 != pnt3->var_1)
if (pnt2->var_1 <= pnt3->var_1)
if (pnt2->var_0 <= pnt3->var_0)

if ((pnt1->var_1 == pnt2->var_1) && (pnt1->var_1 == pnt3->var_1)) return;
if ((pnt1->var_1 == pnt2->var_1) && (pnt1->var_1 >= pnt3->var_1) && (pnt1->var_0 <= pnt2->var_0)) return;
if ((pnt1->var_1 == pnt2->var_1) && (pnt1->var_1 == pnt3->var_1) && (pnt2->var_0 <= pnt1->var_0)) return;
if ((pnt1->var_1 <= pnt2->var_1) && (pnt1->var_1 != pnt3->var_1) && (pnt1->var_1 >= pnt3->var_1) &&
(sortPnt1->var_1 >= 0 ) && (sortPnt1->var_1 >= heightViewPort_93ADC )) return;

if ((pnt1->var_1 == pnt2->var_1) && (pnt1->var_1 == pnt3->var_1)) return;
if ((pnt1->var_1 == pnt2->var_1) && (pnt1->var_1 >= pnt3->var_1) && (pnt1->var_0 <= pnt2->var_0)) return;
if ((pnt1->var_1 == pnt2->var_1) && (pnt1->var_1 == pnt3->var_1) && (pnt2->var_0 <= pnt1->var_0)) return;
if ((pnt1->var_1 < pnt2->var_1) && (pnt1->var_1 > pnt3->var_1) &&
(sortPnt1->var_1 >= 0 ) && (sortPnt1->var_1 >= heightViewPort_93ADC )) return;



      if ( pnt2->var_0 <= pnt3->var_0)
        return;

  if (pnt1->var_1 == pnt2->var_1)
  {
      if (pnt1->var_1 == pnt3->var_1) return;
      if ((pnt1->var_1 >= pnt3->var_1) && (pnt1->var_0 <= pnt2->var_0)) return;
      if ((pnt1->var_1 == pnt3->var_1) && (pnt2->var_0 <= pnt1->var_0)) return;
  }
  else if ((pnt1->var_1 < pnt2->var_1) && (pnt1->var_1 != pnt3->var_1) && (pnt2->var_0 <= pnt3->var_0)) return;

0
if (pnt1->var_1 == pnt2->var_1) false
if (pnt1->var_1 <= pnt2->var_1) true
if (pnt1->var_1 != pnt3->var_1) true
if (pnt1->var_1 >= pnt3->var_1) true
sortPnt1 = pnt3;
sortPnt2 = pnt1;
sortPnt3 = pnt2;
LABEL_24:

1
if (pnt1->var_1 == pnt2->var_1) false
if (pnt1->var_1 <= pnt2->var_1) true
if (pnt1->var_1 != pnt3->var_1) true
if (pnt1->var_1 >= pnt3->var_1) true
sortPnt1 = pnt3;
sortPnt2 = pnt1;
sortPnt3 = pnt2;
LABEL_24:



if (pnt1->var_1 == pnt2->var_1)
    {
        if (pnt1->var_1 == pnt3->var_1)
            return;
        if (pnt1->var_1 >= pnt3->var_1)
        {
            if (pnt1->var_0 <= pnt2->var_0)
                return;
            sortPnt1 = pnt3;
            sortPnt2 = pnt1;
            sortPnt3 = pnt2;
            goto LABEL_225;
        }
        if (pnt2->var_0 <= pnt1->var_0)
            return; -ok
        goto LABEL_268;
    }

if (pnt1->var_1 == pnt2->var_1) true
if (pnt1->var_1 == pnt3->var_1) false
if (pnt1->var_1 >= pnt3->var_1) false
if (pnt2->var_0 <= pnt1->var_0) true return

unk_93AE0[v380x]
unk_93AE0[v380x][0].a16[1]
unk_93AE0[v380x][3].a32

v133 = (uint32*)&unk_93AE0; -ok
v129 = (uint32*)&unk_93AE0; -ok
v124 = (uint32*)&unk_93AE0; -ok
v117 = (uint32*)&unk_93AE0; -ok
v159 = (uint32*)&unk_93AE0; -ok
v155 = (uint32*)&unk_93AE0; -ok
v150 = (uint32*)&unk_93AE0; -ok
v143 = (uint32*)&unk_93AE0; -ok
v160 = (unsigned __int16 *)&unk_93AE0; -ok
for ( i = (uint16*)&unk_93AE0; ; i += 10 ) -ok
v218 = (unsigned __int16 *)&unk_93AE0; -ok

v274 = (unsigned __int16 *)&unk_93AE0; -ok
for ( j = (uint16*)&unk_93AE0; ; j += 10 ) -ok
v1260 = (char *)&unk_93AE0; -ok
v390 = (unsigned __int16 *)&unk_93AE0; -ok
v430 = (unsigned __int16 *)&unk_93AE0; -ok
v470 = (unsigned __int16 *)&unk_93AE0; -ok
v510 = (unsigned __int16 *)&unk_93AE0; -ok
v550 = (unsigned __int16 *)&unk_93AE0; -ok
v590 = (unsigned __int16 *)&unk_93AE0; -ok
v611 = (unsigned __int16 *)&unk_93AE0; -ok
v632 = (unsigned __int16 *)&unk_93AE0; -ok
v669 = (unsigned __int16 *)&unk_93AE0; -ok
v706 = (unsigned __int16 *)&unk_93AE0; -ok
v746 = (unsigned __int16 *)&unk_93AE0; -ok
v786 = (unsigned __int16 *)&unk_93AE0; -ok
v825 = (unsigned __int16 *)&unk_93AE0; -ok
v864 = (unsigned __int16 *)&unk_93AE0; -ok
v904 = (unsigned __int16 *)&unk_93AE0; -ok
v944 = (unsigned __int16 *)&unk_93AE0; -ok
v983 = (unsigned __int16 *)&unk_93AE0; -ok
v1022 = (unsigned __int16 *)&unk_93AE0; -ok
v105 = (uint32*)&unk_93AE0; -ok
v99 = (uint32*)&unk_93AE0; -ok
v88 = (uint32*)&unk_93AE0; -ok
v75 = (uint32*)&unk_93AE0; -ok

unk_93AE0[v380x][0].a16[1]
unk_93AE0[v380x][3].a32

v57 = (uint32*)&unk_93AE0; x
v51 = (uint32*)&unk_93AE0; x
v40 = (uint32*)&unk_93AE0;
v25 = (uint32*)&unk_93AE0;
v133 = (uint32*)&unk_93AE0;
v129 = (uint32*)&unk_93AE0;
v124 = (uint32*)&unk_93AE0;
v117 = (uint32*)&unk_93AE0;
v159 = (uint32*)&unk_93AE0;
v155 = (uint32*)&unk_93AE0;
v150 = (uint32*)&unk_93AE0;
v143 = (uint32*)&unk_93AE0;
v160 = (unsigned __int16*)&unk_93AE0;


tempScrPtr4

tempScrPtr3 v376
v222 tempScrPtr5 - ok
v278 tempScrPtr6 - ok
v332 tempScrPtr7 - ok
v382 tempScrPtr8 x388 - ok
v394 tempScrPtr9 - ok
v434 tempScrPtr10 - ok
v474 tempScrPtr11 - ok
v514 tempScrPtr12 - ok
v554 tempScrPtr13 - ok
v591 tempScrPtr14 k - ok
v612 tempScrPtr15 m - ok
v635 tempScrPtr16 - ok
v672 tempScrPtr17 - ok
v710 tempScrPtr18 - ok
v750 tempScrPtr19 - ok
v790 tempScrPtr20 - ok
v829 tempScrPtr21 - ok
v868 tempScrPtr22 - ok
v908 tempScrPtr23 - ok
v948 tempScrPtr24 - ok
v987 tempScrPtr25 - ok
v1026 tempScrPtr26 - ok

pnt1 0xe2 0xa9 0x00000 0x1ffff 0
pnt1 0xec 0xab 0x00000 0x00000 0
pnt2 0xe5 0xaf 0x1ffff 0x1ffff 0x3b8da

0x229768

dword_AE44C_AE43C
26C44C-> 63220 9FCA0

adr 205C49 26C44C-> 68D10 6CD40
26C3B8 .. 68D10 6A280
234585/63585(read)
211478/40478(sub_40440)
205B05/34B05(sub_34B00)

26C3B8 000000
234585/63585(read)
211478/40478(sub_40440)
205B05/34B05(sub_34B00)
205241/34241(sub_340B0)

adr 2197B7 26C44C-> 63220 9FCA0
26C3B8 .. 9F6A0 63220


487B7 sub_48710 sub_5A3C0_5A8D0(1);

//find here

addprocedurestop(0x2114f0, 0, true, true, 0x26C3B8, 0x12345678, 0);
//addprocedurestop(0x2114f0, 0, true, true, 0x26C44C, 0x12345678, 0);

begFont0Tab_AE3B8_AE3A8_26C3B8_26C3A8 begFont1Tab_AE3BC_26C3BC_26C3AC

pathStrArray[PSdatafont0tab]

TypeStrFont* dword_AE3B8_2[2] = { &sFont0Tab_12CB28_2EAB28_2EAB18, &sFont1Tab_12CB34_2EAB34_2EAB24 };

+		begFont0Tab_AE3B8_AE3A8_26C3B8_26C3A8	0x05e0d280 {Tab_0=0x06b43900 "" dim={x=0x00 '\0' y=0x00 '\0' } }	TypeTab *

switch ( lastPressedKey_12EF70 )

sub_16B00
---------------------------------
pdwScreenBuffer_12EFF4 + 0
0x36 0xversus 0x55

---------------------------------
pdwScreenBuffer_12EFF4 + 0xa696
0xb4 0xversus 0x49

(uint8*)pnt1+0
0xb4 versus 0xff
---------------------------------
pdwScreenBuffer_12EFF4 + 0
0x2ECFF4 + 0
0xb4 0xversus 0x35

0x1FCBE3

tempBegBscreen 26C400->1F690
edi 26C3FC->77160

((int)tempBegBscreen)+35200+16 versus 0x7FAE0+16
in adress 1FCC57/2BC57 DrawSkyTerrainParticles_2A700_2A740

test after 0x1FCBE3 2BBE3

tempBegBscreen[0x32f].pnt2_20
0x7FD88
9090d690
1c1e211c
0000000
c5ffffff
9f000000
1FCC5F/2BC5F

((int)tempBegBscreen)+0x30
0x77160+0x30 0x5E3FFFF 0xA0FDFFFF
0x1FB9CD/2A9CD

test after 0x1FC930

2A96A

add_compare(0x1FC930, true, true);

2c312 // 1FD312
2c339 // 1FD339
2c34e // 1FD34e

2ecff4			if (index232)

0x2055DE
002439C2-FFFFFFF4

--------------
pdwScreenBuffer_12EFF4+0x3658
tempFrame+0x3658
[0x2ECFF4](65be0)+0x3658
0xae versus 0xb5

0x1FBB4D/2AB4D

-------------
0A050505
0x20248C/3148C sub_30D90

beginFrame_93ACC
blurBuffer_AE404_AE3F4

0x2023CD

test 0x65be0+0x3658 ae050505
test 0x735a98+0x3658 b5b4b4b4

tempBlurBuffer+0x3658 b4b4b4b4
tempFrame+0x3658 000000

beginFrame_93ACC+0x3658
pdwScreenBuffer_12EFF4+0x3658

0x20239f

0x65BE0

--------------
pdwScreenBuffer_12EFF4+0x0
[0x2ECFF4](65be0)+0x0
0xb4 versus 0xb5

//tempCos = cos_90B4C[tempYaw];
adress 20221F/0x3121F

modY + tempFixPosY 0x4C78 0x689cb8
modX + tempFixPosX 0x2E98 0x2E84

void DrawWorld_30D90_30DD0()//201D90_
void DrawGameFrame_20FB0()//1F1FB0_

fix sub_31600_31640

--------------
pdwScreenBuffer_12EFF4+0x0
[0x2ECFF4](65be0)+0x0
0x1d 0x46

0x2021d7/0x311D7

test adress adress 0x202022
---------------------------
251AD0->6FFAF8
251ACC->65BE0
251ADC->c8
25159C->723818 2B2B2B2B2C
2EA1E0->230
26C404->735A98

0x2021d1 0x9f beginFrame_93ACC[0x9f]
ecx-1 .. 404040
ecx?
blurBuffer_AE404_AE3F4[0xa0]

251ACC->65BE0
versus
26C404->735A98

beginFrame_93ACC
versus
blurBuffer_AE404_AE3F4
-----------------
d ds:ebp+14 
2f0b60->735a98
2ecff4
sub_61610_61B20
2344A0

Pathstruct pathStrArray[32]
begWscreen_2ECFF4_2ECFE4
pdwScreenBuffer_12EFF4
--------------------
((int)str_AE400_AE3F0)+0x28
0x1F690+0x28
0x71 versus 0x70
0x212eab 41EAB sub_41E90
0x1f89ba 279BA sub_277D0
0x1f8402 27402 sub_27030

dword_AD008_ACFF8
Type_AC5F0
--------------------
((int)str_AE400_AE3F0)+0x4
0x1F690+0x4
0xdf versus 0x71
--------------------
((int)str_AE400_AE3F0)+0x11f5
0x1F690+0x11f5
0x00 versus 0x87

--------------------
((int)str_AE400_AE3F0)+0x4
0x1F690+0x4
0x4 versus 0xdf

--------------------
((int)str_AE400_AE3F0)+0x11f5
0x1F690+0x11f5
0x17 versus 0x87

str_AE400_AE3F0->var_u32_4597

&str_AE400_AE3F0->str_29795[jx]
--------------------
((int)str_AE400_AE3F0)+0x380c
0x1F690+0x380c
0x8 versus 0x10
0x1f690+a versus
str_AE400_AE3F0->var_u16_10 is zero

&(&str_AE400_AE3F0->str_29795[0x276])->var_u32_29867_72.z
0x3fe8b+0x48+4

sub_41C70_41FB0
sub_455D0
sub_45C90

word_AE454_AE444

word_AE454_AE444

int sub_45410(Type_AE400_29795* a1x)

&str_AE400_AE3F0
&str_AE400_AE3F0->str_29795[0x276].var_u32_29951_156
&str_AE400_AE3F0->str_29795[0x276].var_u32_29951_156->v_12
&a1x->var_u32_29951_156->v_12
0x257024

str_AE408_AE3F8->var_u32_168

str_AE400_AE3F0->str_29795[1].var_u32_29951_156

unk_98F38

str_AE400_AE3F0->var_u32_593[str_AE400_AE3F0->var_u32_40]

&str_AE400_AE3F0->str_29795[i]

dword_12DF8C
byte_12E7D0
--------------------
((int)str_AE400_AE3F0)+0x28
0x1F690+0x28
0x71 versus 0x70

Type_AE400_29795* sub_11D10(Type_AE400_29795* event)//1E2D10

int sub_114B0(int a1, _DWORD *a2, _DWORD *a3)//1E24B0_
dword_AC5F0x[1].stub_5

------------------------
event->id_29819_24 != v6->id_29819_24
0xDF 0x1E6 versus 0x1E4 0x1E4
str_AE400_AE3F0->str_29795[0x1e4]

&str_AE400_AE3F0->str_29795[jx].id_29819_24

&str_AE400_AE3F0->var_u32_593[0x20c]
&str_AE400_AE3F0->str_29795

0x2F9E7 0xDF
0x3A263 0x1E6
0x3a11b

if (compareindex_41780_2 == 0x943)
sub_41780 212780_ ok
sub_27030 1F8030_
sub_11D10 1E2D10
sub_114B0 1E24B0_
0 0x3a11b 0x39b57 (0x1e4 0x1e4)
1 0x3a11b 0x39b57 (0x1e4 0x1e4)
2

i = v6->var_u16_29815_20

  v9 = (event->var_u32_29867_72.x + 128) >> 8;
  v2 = (event->var_u32_29867_72.y + 128) >> 8;
problem

Type_AE400_29795* sub_11D10(Type_AE400_29795* event)//1E2D10

&str_AE400_AE3F0->str_29795[0x1e4].var_u32_29867_72
versus 0x3a14b
&str_AE400_AE3F0->str_29795[0x1e4].var_u32_150
versus 0x3a199


0x21187D -ok
void GameLoop_34610_349D0()//205610_ begin -ok
0x212A0A -OK
if (compareindex_41780_2 == 0x6ce) - x problem

7F8F 1562 D001
808f 1562 D001

--------------------
((int)str_AE400_AE3F0)+0x4
0x1F690+0x4
0xfe versus 0x61

0xbf versus 0x42

int dword_AE3E0; // weak struct 6? 0-u16? 2-u32*(28*0x211u)
int dword_AE3EC; // weak 4-u32 8-u32 12-u16 Type_168

sub_10CB0 .
sub_10D40 .?
sub_10EB0
sub_10F10 .
sub_10FD0 .
sub_11010 .
sub_36700 .
sub_36850
sub_369D0 .
sub_369E0
sub_36A90 ?
sub_36C10 ?
sub_58B30 --
sub_59230
sub_59370 .

str_AE400_AE3F0->str_29795[0x50].var_u32_29955_160->var_48
sub_416B0

&unk_98F38[((int64)str_AE400_AE3F0->str_29795[i].var_u32_29951_156 - (int64)0x257018) / sizeof(Type_156) + 7]
&unk_98F38[0x4988]

str_AE400_AE3F0->str_29795[0x50].var_u32_29951_156 - nejde p5e49ct paměť

unk_98F38 ?

sub_36A90
sub_58B30

sub_58E70 - set of dword_AE3EC
&dword_AE3EC->var_8[0x64].var_u32_4

dword_AE3EC->var_8[0x33].var_u32_4
  if ( a2 < a1x->var_4)

sub_36700 a3x->sub_0.var_4x 0x2ffa9c 3fdab4
0x30002e
207a27 36A27 sub_369E0
counter_sub_369E0 2 -ok
counter_sub_369E0 3 -problem
a1x->var_4x versus edx 0x2ffab2
sub_36850
0x63 0x350 0x350
0x64 0x3b90 0x1ac8
229890 00
2298bf 137
2298c6 d330

fix sub_36A90 !!!!

0x3b90

207a27 36A27 sub_369E0
a1x->var_8[0x64].var_u32_4
a1x->var_8[0x64].var_u32_4 = a2;

bool sub_59050 22A050
char sub_59230()//22A230_
void sub_59370()//22A370_
void sub_59420_59930()//22A420_

char sub_59230()//22A230_

byte_12E9E1/2ec9e1 - spatna inicializace

unk_99BA0
struct 14
0 - word
2 - word
4 - word
6 - word
8 - word
10 - byte
11 - byte
12 - byte
13 - byte

word_989C6 2569c6

find byte_12E7D0

--------------------
((int)str_AE400_AE3F0)+0x4
0x1F690+0x4
0x42 versus 0xbf

0 - 0xb
5 - 6
5 + 4 - 0x1e
-------------------
word_AE454_AE444 0693e1608a01
26c454           0493db608b01

&event->var_u32_29867_72 fe92d8608a01
3a1ef                    ff92d5608b01
&str_AE400_AE3F0->str_29795[0x1e5].var_u32_29867_72

word_AE454_AE444
26c454

sub_196E0

&str_AE400_AE3F0->str_29795[0x1e5].var_u32_150
0x0003A23D

event->var_u32_150.x = (250 * event->var_u32_150.x - (((250 * event->var_u32_150.x) >> 31) << 8) + ((250 * event->var_u32_150.x) >> 31)) >> 8;
event->var_u32_150.x = (250 * event->var_u32_150.x) >> 8;

----------------------------------
begWscreen_2ECFF4_2ECFE4 + 0xbfeb b2 versus b4
0x71BCB

1fdf16 2CF16 sub_2C410















